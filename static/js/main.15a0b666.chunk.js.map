{"version":3,"sources":["TodoMain/TodoForm.js","TodoMain/Quantity.js","TodoMain/Sort.js","TodoMain/Options.js","TodoMain/TodoItem.js","TodoMain/PagiButton.js","TodoMain/Pagination.js","TodoMain/TodoSection.js","TodoMain/TodoMain.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","title","color","dateText","TodoForm","addTodo","classes","useState","titleInput","setTitleInput","Box","mt","pb","InputLabel","FormControl","component","style","display","onSubmit","e","event","preventDefault","justifyContent","Input","width","type","value","onChange","target","placeholder","className","minWidth","Button","variant","marginLeft","Quantity","filterMethod","mr","onClick","marginBottom","Sort","sortBtn","classFirstBtn","setClassFirstBtn","classSecondBtn","setClassSecondBtn","alignItems","Typography","ml","size","Options","sortTodos","theme","root","margin","spacing","maxWidth","TodoItem","todo","todoDelete","todoComplete","currentText","changeText","editTodo","name","changeTitle","setChangeTitle","editField","setEditField","ListItem","htmlFor","uuid","Checkbox","id","inputProps","done","checked","onDoubleClick","console","log","onKeyDown","key","p","TextField","input","onBlur","onKeyPress","change","label","InputProps","autoFocus","createdAt","slice","startIcon","PagiButtons","number","btnSwitchPage","activeBtn","setActiveBtn","useEffect","Pagination","countTodoOnPage","countFilterTodo","pageNum","i","Math","ceil","push","map","btn","PagiButton","TodoSection","todos","setTodos","filterTodos","setFilterTodos","currentPage","setCurrentPage","trackBug","setTrackBug","openError","setOpenError","valFilter","setValFilter","valSort","setValSort","sliceTodosList","arrTodo","lastIdTask","firstIdTask","showSnackBar","error","postTodos","task","a","axios","post","dataPOST","data","deleteTodos","delete","filter","getTodos","val","get","params","filterBy","order","dataGET","putTodos","newName","flag","patch","handleEditTodo","newTitle","length","handleDeleteToDo","itemId","handleCurrentText","func","handleClose","reason","bgcolor","userInput","clearInput","minHeight","List","num","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","TodoMain","props","Container","createBlock","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15a0b666.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { Box, InputLabel, FormControl, Input, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n    title: {\n        color: 'white'\n    },\n    dateText: {\n        color: 'orange'\n    }\n}))\n\nexport default function TodoForm({ addTodo }) {\n\n    const classes = useStyles();\n\n    const [titleInput, setTitleInput] = useState('')\n\n    function handleFormSubmit (event) {\n        if(titleInput !== '') {\n            event.preventDefault();\n            addTodo(titleInput, setTitleInput);\n        } event.preventDefault();\n    }\n\n    function handleChangeInput (event) {\n        setTitleInput(event.target.value)\n    }\n\n\n    return ( \n        <Box mt={3} pb={5}>\n            <InputLabel></InputLabel>\n            <FormControl \n            component='form' \n            style={ { display: 'flex'} } \n            onSubmit={(e) => handleFormSubmit(e)}>\n                <Box display='flex' justifyContent=\"space-around\"> \n                    <Input \n                        style={ { width: '70%'} }\n                        type=\"text\"\n                        value={titleInput}\n                        onChange={(e) => handleChangeInput(e)} \n                        placeholder=\"Write a goal...\"\n                        className={classes.title}\n                        style= {{ minWidth: '100px'}}\n                    >\n                    </Input>\n                    <Button variant=\"contained\" color=\"primary\" style={ { width: '20%', marginLeft: '90px'} } type=\"submit\">Create</Button>\n                </Box>\n            </FormControl>\n        </Box>\n    )\n}","import React from 'react'\nimport QuantityBtn from './QuantityBtn'\nimport { Box, Button } from '@material-ui/core';\n\nexport default function Quantity ({ filterMethod }) {\n    return (\n        <Box mr={1}>\n            <Button onClick={ () => filterMethod('')} variant=\"contained\" style={ { marginLeft: '20px', marginBottom: '20px', width: '96px'}} type=\"button\">All</Button>\n            <Button onClick={ () => filterMethod('done')} variant=\"contained\" style={ { marginLeft: '20px', marginBottom: '20px', width: '96px'}} type=\"button\">Done</Button>\n            <Button onClick={ () => filterMethod('undone')} variant=\"contained\" style={ { marginLeft: '20px', marginBottom: '20px', width: '96px'}} type=\"button\">Undone</Button>\n        </Box>\n    )\n}","import React, { useState } from 'react'\nimport { Box, Typography, Button } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport default function Sort ({ sortBtn }) {\n\n    const [classFirstBtn, setClassFirstBtn] = useState('secondary')\n    const [classSecondBtn, setClassSecondBtn] = useState('')\n    return (\n        <Box display='flex' alignItems='center'>\n            <Typography>Sort by date:</Typography>\n            <Box ml={1}>\n                <Button size=\"small\" onClick={() => {\n                    sortBtn('asc')\n                    setClassFirstBtn('secondary')\n                    setClassSecondBtn('')\n                }} color={classFirstBtn} type =\"button\">\n                    <ArrowUpwardIcon />\n                </Button>\n            </Box>\n            <Box ml={1}>\n                <Button size=\"small\" onClick={() => {\n                    sortBtn('desc')\n                    setClassSecondBtn('secondary')\n                    setClassFirstBtn('')\n                }} color={classSecondBtn} type =\"button\">\n                    <ArrowDownwardIcon />\n                </Button>\n            </Box>\n        </Box>\n    )\n}","import React from 'react'\nimport Quantity from './Quantity'\nimport Sort from './Sort'\nimport { Box } from '@material-ui/core';\n\nexport default function Options ({ sortTodos, filterMethod }) {\n    return (\n        <Box display='flex' justifyContent=\"space-between\">\n            <Quantity filterMethod={filterMethod} />\n            <Sort sortBtn={sortTodos} />\n        </Box>\n    )\n}","import React, {useState} from 'react'\nimport { ListItem, Checkbox, Button, Box, Typography, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'white'\n    },\n    dateText: {\n        color: 'orange'\n    },\n    root: {\n        '& > *': {\n          margin: theme.spacing(1),\n          maxWidth: '25ch',\n        },\n      }\n}))\n\n\nexport default function TodoItem({ todo, todoComplete, todoDelete, changeText, currentText, editTodo }) {\n\n    const classes = useStyles();\n    \n    const [changeTitle, setChangeTitle] = useState(todo.name)\n    const [editField, setEditField] = useState(true)\n\n    function change (e) {\n        setChangeTitle(e.target.value)\n    }\n    \n    return (\n        <ListItem>\n            <Box htmlFor={todo.uuid} style={{display: 'flex', alignItems: 'center'}}>\n                <Checkbox\n                    id={todo.uuid} \n                    value=\"checkedA\"\n                    inputProps={{ 'aria-label': 'Checkbox A' }}\n                    onChange={() => editTodo(todo, todo.name, !todo.done)}\n                    checked={todo.done}\n                />\n                <form \n                    className={classes.root}\n                    onDoubleClick={(e) => {\n                        setEditField(false)\n                        console.log(todo)\n                    }}\n                    onKeyDown={(e) => {\n                        if (e.key === 'Escape') {\n                            currentText(e, todo, setChangeTitle)\n                            setEditField(true)\n                        }\n                    }}\n                >\n                    <Box width='608px'  p={2} >\n                        { (editField) \n                        ? <Typography className={classes.title} >{changeTitle}</Typography>\n                        : <TextField \n                            className={classes.input}\n                            onBlur={() => setEditField(true)}\n                            onKeyPress={(e) => {\n                                if(editField === false && e.key === 'Enter') {\n                                    editTodo(todo, changeTitle, todo.done)\n                                    setEditField(true)\n                                }\n                            }} \n                            onChange={(e) => change(e)} \n                            value={changeTitle} \n                            label=\"Outlined\" \n                            variant=\"outlined\"\n                            InputProps={{\n                                style: {\n                                    color: \"#f50057\"\n                                }\n                            }}\n                            autoFocus\n                          />\n                        }\n                    </Box>\n                </form>\n                <Typography className={classes.dateText}>{`${todo.createdAt.slice(0, 10)}, time: ${todo.createdAt.slice(11, 19)}`}</Typography>\n            </Box>\n            <Button startIcon={<DeleteOutlinedIcon />} onClick={() => todoDelete(todo.uuid)} type=\"button\"></Button>\n        </ListItem>\n    )\n}   \n\n","import React, { useEffect, useState } from 'react'\nimport { Button, Box } from '@material-ui/core';\n\nfunction PagiButtons ( { number, btnSwitchPage }) {\n    const [activeBtn, setActiveBtn] = useState('outlined')\n    const [currentNum, setCurrentBtn] = useState(number)\n    function changeBtn() {\n        setCurrentBtn(number)\n    }\n    console.log('status', activeBtn, number);\n    useEffect(() => {\n        setActiveBtn('outlined')\n    }, [number])\n\n    return <Box mr={1}>\n                <Button \n                    variant={activeBtn}\n                    color=\"secondary\"\n                    onClick={(e) => {\n                        btnSwitchPage(number)\n                        console.log(number)\n                    }} \n                >\n                {number} \n                </Button>\n            </Box>\n}\n\nexport default PagiButtons","import React, { useState } from 'react' \nimport { Button, Box } from '@material-ui/core';\nimport PagiButtons from './PagiButton'\n\nfunction Pagination ({ btnSwitchPage, countTodoOnPage, countFilterTodo }) {\n\n    const pageNum = []\n\n    for (let i = 1; i <= Math.ceil(countFilterTodo / countTodoOnPage); i++) {\n        pageNum.push(i)\n    }\n\n    \n    return (\n        <Box display='flex' justifyContent='center'>\n            {pageNum.map((btn, i) => {\n                return (\n                <PagiButtons number={btn} key={i} btnSwitchPage={btnSwitchPage}/>\n                // <Box mr={1} key = {i}>\n                //     <Button \n                //         id={i}\n                //         variant=\"outlined\" \n                //         color=\"secondary\"\n                //         onClick={(e) => {\n                //             btnSwitchPage(btn)\n                //         }} \n                //     >\n                //     {btn} \n                //     </Button>\n                // </Box>\n                )\n            })}\n        </Box>\n    )\n}\n\nexport default Pagination","import React, {useState, useEffect } from 'react'\nimport { Typography, Box, List, Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport TodoForm from './TodoForm'\nimport Options from './Options'\nimport TodoItem from './TodoItem'\nimport Pagination from './Pagination'\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles(() => ({\n    title: {\n        color: 'white'\n    },\n    input: {\n        color: \"white\"\n      }\n}))\n\n\nfunction TodoSection() {\n    const classes = useStyles();\n\n    const [todos, setTodos] = useState([])\n    const [filterTodos, setFilterTodos] = useState([...todos])\n    const [currentPage, setCurrentPage] = useState(1)\n    const [trackBug, setTrackBug] = useState('')\n    const [openError, setOpenError] = useState(false);\n    const [valFilter, setValFilter] = useState('')\n    const [valSort, setValSort] = useState('asc')\n\n    const countTodoOnPage = 3    \n\n    function sliceTodosList(arrTodo) {\n        const lastIdTask = currentPage * countTodoOnPage\n        const firstIdTask = lastIdTask - countTodoOnPage\n        setFilterTodos(arrTodo.slice(firstIdTask, lastIdTask))\n    }\n\n    function showSnackBar(error) {\n        setOpenError(true)\n        setTrackBug(`${`${error}`.slice(0, 6) + ' ' + `${error}`.slice(39, 42)}`)\n    }\n\n  \n//REST API\n    const postTodos =  async (task) => {\n        try {\n            const dataPOST = await axios.post('https://todo-api-learning.herokuapp.com/v1/task/2', task)\n            setTodos([...todos, dataPOST.data])\n            sliceTodosList([...filterTodos, dataPOST.data])\n            console.log('Very pretty code!!!', dataPOST)\n        } catch (err) {\n            showSnackBar(err)\n        }\n    }\n\n    const deleteTodos = async (id) => {\n        try {\n            await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`)\n            setTodos([...todos.filter(todo => todo.uuid !== id) ])\n            setFilterTodos([...filterTodos.filter(todo => todo.uuid !== id) ])\n        } catch (err) {\n            showSnackBar(err)\n        }\n    }\n\n    const getTodos = async (val) => {\n        try {\n            const dataGET = await axios.get('https://todo-api-learning.herokuapp.com/v1/tasks/2', {params: { filterBy: valFilter, order: (valSort) }})\n            val = ''\n            setTodos(dataGET.data)\n            sliceTodosList(dataGET.data)\n            console.log(val)\n        } catch (err) {\n            showSnackBar(err)\n        }\n    }\n    \n    const putTodos = async (id, newName, flag) => {\n        try {\n            await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`, {done: flag, name: newName})\n            getTodos('asc')\n        } catch (err) {\n            showSnackBar(err)\n        }\n    }\n\n\n\n    \n    function handleEditTodo (task, newTitle, flag) {\n        putTodos(task.uuid, newTitle, flag)\n    }\n\n    function handleAddItem (userInput, clearInput) {\n        const newItem = {\n            name: userInput,\n            done: false\n        }\n        postTodos(newItem)\n        clearInput('')\n        if (filterTodos.length > 2) {\n            sliceTodosList(todos)\n        }\n    }\n\n\n\n\n    useEffect(() => {\n        sliceTodosList(todos)\n    }, [currentPage])\n\n    useEffect (() => {\n        if (filterTodos.length < 1 && todos.length !== 0 && currentPage !== 1) {\n            setCurrentPage(currentPage - 1)\n            sliceTodosList(todos)\n        } \n        else if (filterTodos.length < 1 && todos.length !== 0 && currentPage === 1) {\n            sliceTodosList(todos)\n        }\n    }, [filterTodos.length])\n\n    useEffect(() => {\n        getTodos()\n    }, [valFilter, valSort])\n    \n\n    const handleDeleteToDo = async (itemId) => {\n        await deleteTodos(itemId)\n    }\n    \n\n    \n    function handleCurrentText (e, task, func) {\n        if (e.key === 'Escape') {\n            setFilterTodos([...filterTodos.map(todo => {\n                func(task.name)\n                return todo\n            })])\n        }\n    }\n    \n\n\n    const handleFilterMethod = (val) => {\n        setValFilter(val)\n    }\n\n    function handleSort (val) {\n        setValSort(val)\n    }\n\n    function handlePaginationBtn (num) {\n        setCurrentPage(num)\n    }\n    \n//Snackbar\n    const handleClose = (reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setOpenError(false);\n    };\n      \n\n\n    return (\n        <Box bgcolor=\"text.secondary\" p={10}>\n            <Typography className={ classes.title } variant='h3'>toDo List</Typography>\n            <TodoForm addTodo={handleAddItem}></TodoForm>\n            <Options \n                sortTodos={handleSort} \n                filterMethod={handleFilterMethod}\n            />\n            <Box minHeight='280px'>\n                <List>\n                    {filterTodos.map((todo) => {\n                        return (\n                            <TodoItem \n                                todoDelete={handleDeleteToDo}\n                                todo={todo} \n                                key={todo.uuid}\n                                currentText={handleCurrentText}\n                                editTodo={handleEditTodo}\n                            />\n                        )\n                        })\n                    }\n                </List>\n            </Box>\n            {todos.length > 3 \n            && \n            <Pagination \n                classes={classes}\n                btnSwitchPage={handlePaginationBtn} \n                countTodoOnPage={countTodoOnPage}                \n                countFilterTodo={todos.length}\n            />\n            }\n            <Snackbar \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={openError} \n                autoHideDuration={6000} \n                onClose={handleClose}\n            >\n                <Alert onClose={handleClose} severity=\"error\">\n                    {trackBug}\n                </Alert>\n            </Snackbar>\n        </Box>\n    )\n}\n\nexport default TodoSection","import React from 'react'\nimport Section from './TodoSection'\nimport { Container } from '@material-ui/core';\n\nfunction TodoMain(props) {\n    return (\n        <Container maxWidth='md'>\n            <Section createBlock={props.createBlock}/>\n        </Container>\n\n    )\n}\n\nexport default TodoMain","import React from 'react'\nimport TodoMain from './TodoMain/TodoMain'\n\nexport default function App() {\n\n    function createBlock () {\n        return (\n            console.log(\"asdkfsa;ldfkn\")\n        )\n    }\n\n    return (\n        <TodoMain createBlock={createBlock}/>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}