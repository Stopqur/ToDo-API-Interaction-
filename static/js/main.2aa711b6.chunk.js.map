{"version":3,"sources":["TodoMain/TodoForm.js","TodoMain/Quantity.js","TodoMain/Sort.js","TodoMain/Options.js","TodoMain/TodoItem.js","TodoMain/Pagination.js","TodoMain/TodoSection.js","TodoMain/TodoMain.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","title","color","dateText","TodoForm","addTodo","classes","useState","titleInput","setTitleInput","Box","mt","pb","InputLabel","FormControl","component","style","display","onSubmit","e","event","preventDefault","justifyContent","Input","width","type","value","onChange","target","placeholder","className","Button","variant","marginLeft","Quantity","filterMethod","onClick","Sort","sortBtn","sortBtnLater","alignItems","Typography","startIcon","Options","sortTodos","theme","root","margin","spacing","TodoItem","todo","todoComplete","todoDelete","changeText","returnText","name","changeTitle","setChangeTitle","changeTag","setChangeTag","ListItem","htmlFor","uuid","Checkbox","id","inputProps","checked","done","onDoubleClick","console","log","onKeyDown","key","p","TextField","input","onBlur","onKeyPress","label","InputProps","autoFocus","createdAt","slice","Pagination","btnSwitchPage","countTodoOnPage","countFilterTodo","pageNum","i","Math","ceil","push","map","btn","mr","TodoSection","todos","setTodos","filterTodos","setFilterTodos","currentPage","setCurrentPage","trackBug","setTrackBug","openBar","setOpenBar","valFilter","setValFilter","valSort","setValSort","sliceTodosList","arrTodo","lastIdTask","firstIdTask","postTodos","task","a","axios","post","dataPOST","data","deleteTodos","delete","filter","getTodos","get","params","filterBy","order","dataGET","putTodos","newName","flag","patch","handleTodoComplete","handleChangeText","newTitle","useEffect","length","handleDeleteToDo","itemId","handleReturnText","func","handleClose","reason","bgcolor","userInput","clearStr","val","minHeight","List","num","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","TodoMain","props","Container","maxWidth","createBlock","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2aa711b6.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { Box, InputLabel, FormControl, Input, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n    title: {\n        color: 'white'\n    },\n    dateText: {\n        color: 'orange'\n    }\n}))\n\nexport default function TodoForm({ addTodo }) {\n\n    const classes = useStyles();\n\n    const [titleInput, setTitleInput] = useState('')\n\n    function handleFormSubmit (event) {\n        if(titleInput !== '') {\n            event.preventDefault();\n            addTodo(titleInput, setTitleInput);\n        } event.preventDefault();\n    }\n\n    function handleChangeInput (event) {\n        setTitleInput(event.target.value)\n    }\n\n\n    return ( \n        <Box mt={3} pb={5}>\n            <InputLabel>Ввод текста</InputLabel>\n            <FormControl \n            component='form' \n            style={ { display: 'flex'} } \n            onSubmit={(e) => handleFormSubmit(e)}>\n                <Box display='flex' justifyContent=\"space-around\"> \n                    <Input \n                        style={ { width: '70%'} }\n                        type=\"text\"\n                        value={titleInput}\n                        onChange={(e) => handleChangeInput(e)} \n                        placeholder=\"Write a goal...\"\n                        className={classes.title}\n                    >\n                    </Input>\n                    <Button variant=\"contained\" color=\"primary\" style={ { width: '20%', marginLeft: '90px'} } type=\"submit\">Create</Button>\n                </Box>\n            </FormControl>\n        </Box>\n    )\n}","import React from 'react'\nimport QuantityBtn from './QuantityBtn'\nimport { Box, Button } from '@material-ui/core';\n\nexport default function Quantity ({ filterMethod }) {\n    return (\n        <Box>\n            <Button onClick={ () => filterMethod('')} variant=\"contained\" type=\"button\">All</Button>\n            <Button onClick={ () => filterMethod('done')} variant=\"contained\" style={ { marginLeft: '20px'}} type=\"button\">Done</Button>\n            <Button onClick={ () => filterMethod('undone')} variant=\"contained\" style={ { marginLeft: '20px'}} type=\"button\">Undone</Button>\n        </Box>\n    )\n}","import React from 'react'\nimport { Box, Typography, Button, CardMedia } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport default function Sort ({ sortBtn, sortBtnLater }) {\n    return (\n        <Box display='flex' alignItems='center'>\n            <Typography>Sort by date:</Typography>\n            <Button startIcon={<ArrowUpwardIcon />} onClick={() => sortBtn('asc')} type =\"button\"></Button>\n            <Button startIcon={<ArrowDownwardIcon />} onClick={() => sortBtn('desc')} type =\"button\"></Button>\n        </Box>\n    )\n}","import React from 'react'\nimport Quantity from './Quantity'\nimport Sort from './Sort'\nimport { Box } from '@material-ui/core';\n\nexport default function Options ({ sortTodos, filterMethod }) {\n    return (\n        <Box display='flex' justifyContent=\"space-between\">\n            <Quantity filterMethod={filterMethod} />\n            <Sort sortBtn={sortTodos} />\n        </Box>\n    )\n}","import React, {useState} from 'react'\nimport { ListItem, Checkbox, Button, Box, Typography, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: 'white'\n    },\n    dateText: {\n        color: 'orange'\n    },\n    root: {\n        '& > *': {\n          margin: theme.spacing(1),\n          width: '25ch',\n        },\n      }\n}))\n\n\nexport default function TodoItem({ todo, todoComplete, todoDelete, changeText, returnText }) {\n\n    const classes = useStyles();\n    \n    const [changeTitle, setChangeTitle] = useState(todo.name)\n    const [changeTag, setChangeTag] = useState(true)\n\n  \n    \n    return (\n        <ListItem>\n            <Box htmlFor={todo.uuid} style={{display: 'flex', alignItems: 'center'}}>\n                <Checkbox\n                    id={todo.uuid} \n                    value=\"checkedA\"\n                    inputProps={{ 'aria-label': 'Checkbox A' }}\n                    onChange={() => todoComplete(todo)}\n                    checked={todo.done}\n                />\n                <form \n                    className={classes.root}\n                    onDoubleClick={(e) => {\n                        setChangeTag(false)\n                        console.log(todo)\n                    }}\n                    onKeyDown={(e) => {\n                        if (e.key === 'Escape') {\n                            returnText(e, todo, setChangeTitle)\n                            setChangeTag(true)\n                        }\n                    }}\n                >\n                    <Box width='608px' p={2} >\n                        { (changeTag) \n                        ? <Typography className={classes.title} >{changeTitle}</Typography>\n                        : <TextField \n                            className={classes.input}\n                            onBlur={() => setChangeTag(true)}\n                            onKeyPress={(e) => {\n                                if(changeTag === false && e.key === 'Enter') {\n                                    changeText(changeTitle, todo)\n                                    setChangeTag(true)\n                                }\n                            }} \n                            onChange={(e) => setChangeTitle(e.target.value)} \n                            value={changeTitle} \n                            label=\"Outlined\" \n                            variant=\"outlined\"\n                            InputProps={{\n                                style: {\n                                    color: \"#f50057\"\n                                }\n                            }}\n                            autoFocus\n                          />\n                        }\n                    </Box>\n                </form>\n                <Typography className={classes.dateText}>{`${todo.createdAt.slice(0, 10)}, time: ${todo.createdAt.slice(11, 19)}`}</Typography>\n            </Box>\n            <Button startIcon={<DeleteOutlinedIcon />} onClick={() => todoDelete(todo.uuid)} type=\"button\"></Button>\n        </ListItem>\n    )\n}   \n\n","import React from 'react' \nimport { Button, Box } from '@material-ui/core';\n\nfunction Pagination ({ btnSwitchPage, countTodoOnPage, countFilterTodo }) {\n    const pageNum = []\n\n    for (let i = 1; i <= Math.ceil(countFilterTodo / countTodoOnPage); i++) {\n        pageNum.push(i)\n    }\n\n    return (\n        <Box display='flex' justifyContent='center'>\n            {pageNum.map((btn, i) => {\n                return (\n                <Box mr={1} key = {i}>\n                    <Button \n                        variant=\"outlined\" \n                        color=\"secondary\"\n                        onClick={() => btnSwitchPage(btn)} \n                    >\n                    {btn} \n                    </Button>\n                </Box>\n                )\n            })}\n        </Box>\n    )\n}\n\nexport default Pagination","import React, {useState, useEffect, createRef} from 'react'\nimport { Typography, Box, List, Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport TodoForm from './TodoForm'\nimport Options from './Options'\nimport TodoItem from './TodoItem'\nimport Pagination from './Pagination'\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles(() => ({\n    title: {\n        color: 'white'\n    },\n    input: {\n        color: \"white\"\n      }\n}))\n\n\nfunction TodoSection() {\n    const classes = useStyles();\n\n    const [todos, setTodos] = useState([])\n    const [filterTodos, setFilterTodos] = useState([...todos])\n    const [currentPage, setCurrentPage] = useState(1)\n    const [trackBug, setTrackBug] = useState('')\n    const [openBar, setOpenBar] = useState(false);\n    const [valFilter, setValFilter] = useState('')\n    const [valSort, setValSort] = useState('asc')\n\n    const countTodoOnPage = 3    \n\n    function sliceTodosList(arrTodo) {\n        const lastIdTask = currentPage * countTodoOnPage\n        const firstIdTask = lastIdTask - countTodoOnPage\n        setFilterTodos(arrTodo.slice(firstIdTask, lastIdTask))\n    }\n\n  \n//REST API\n    const postTodos =  async (task) => {\n        try {\n            const dataPOST = await axios.post('https://todo-api-learning.herokuapp.com/v1/task/2', task)\n            setTodos([...todos, dataPOST.data])\n            sliceTodosList([...filterTodos, dataPOST.data])\n            console.log('Very pretty code!!!', dataPOST)\n        } catch (err) {\n            setOpenBar(true)\n            setTrackBug(`${`${err}`.slice(0, 6) + ' ' + `${err}`.slice(39, 42)}`)\n            console.log('It is wrong code!!!!!', err)\n        }\n    }\n\n    const deleteTodos = async (id) => {\n        try {\n            await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`)\n            setTodos([...todos.filter(todo => todo.uuid !== id) ])\n            setFilterTodos([...filterTodos.filter(todo => todo.uuid !== id) ])\n        } catch (err) {\n            setOpenBar(true)\n            setTrackBug(`${`${err}`.slice(0, 6) + ' ' + `${err}`.slice(39, 42)}`)\n            console.log(`Troubles with delete task: ${err}`)\n        }\n    }\n\n    const getTodos = async () => {\n        try {\n            const dataGET = await axios.get('https://todo-api-learning.herokuapp.com/v1/tasks/2', {params: { filterBy: valFilter, order: valSort }})\n            setTodos(dataGET.data)\n            sliceTodosList(dataGET.data)\n        } catch (err) {\n            setOpenBar(true)\n            setTrackBug(`${`${err}`.slice(0, 6) + ' ' + `${err}`.slice(39, 42)}`)\n            console.log('GET function very bad written', err)\n        }\n    }\n\n    \n    const putTodos = async (id, newName, flag) => {\n        try {\n            const dataPUT = await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`, {done: !flag, name: newName})\n            getTodos()\n            setValSort('asc')\n        } catch (err) {\n            setOpenBar(true)\n            setTrackBug(`${`${err}`.slice(0, 6) + ' ' + `${err}`.slice(39, 42)}`)\n            console.log('PUT trouble: ', err)\n        }\n    }\n\n    function handleTodoComplete (task) {\n        putTodos(task.uuid, task.name, task.done)\n    }\n\n    function handleChangeText (newTitle, task) {\n        putTodos(task.uuid, newTitle, !task.done)\n    }\n\n\n    function handleAddItem (userInput, clearStr) {\n        const newItem = {\n            name: userInput,\n            done: false\n        }\n        postTodos(newItem)\n        clearStr('')\n        if (filterTodos.length > 2) {\n            sliceTodosList(todos)\n        }\n    }\n\n\n    useEffect(() => {\n        sliceTodosList(todos)\n    }, [currentPage])\n\n    useEffect (() => {\n        if (filterTodos.length < 1 && todos.length !== 0 && currentPage !== 1) {\n            setCurrentPage(currentPage - 1)\n            sliceTodosList(todos)\n        } \n        else if (filterTodos.length < 1 && todos.length !== 0 && currentPage === 1) {\n            sliceTodosList(todos)\n        }\n    }, [filterTodos.length])\n\n    useEffect(() => {\n        getTodos()\n    }, [valFilter, valSort])\n    \n\n    const handleDeleteToDo = async (itemId) => {\n        await deleteTodos(itemId)\n    }\n    \n\n    \n    function handleReturnText (e, task, func) {\n        if (e.key === 'Escape') {\n            setFilterTodos([...filterTodos.map(todo => {\n                func(task.name)\n                return todo\n            })])\n        }\n    }\n    \n\n\n    const handleFilterMethod = (val) => {\n        setValFilter(val)\n    }\n\n    function handleSort (val) {\n        setValSort(val)\n    }\n\n    function handlePaginationBtn (num) {\n        setCurrentPage(num)\n    }\n    \n//Snackbar\n    const handleClose = (reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setOpenBar(false);\n    };\n      \n\n\n    return (\n        <Box bgcolor=\"text.secondary\" p={10}>\n            <Typography className={ classes.title } variant='h3'>toDo List</Typography>\n            <TodoForm addTodo={handleAddItem}></TodoForm>\n            <Options \n                sortTodos={handleSort} \n                filterMethod={handleFilterMethod}\n            />\n            <Box minHeight='280px'>\n                <List>\n                    {filterTodos.map((todo) => {\n                        return (\n                            <TodoItem \n                                todoComplete={handleTodoComplete}\n                                todoDelete={handleDeleteToDo}\n                                todo={todo} \n                                key={todo.uuid}\n                                changeText={handleChangeText}\n                                returnText={handleReturnText}\n                            />\n                        )\n                        })\n                    }\n                </List>\n            </Box>\n            {todos.length > 3 \n            && \n            <Pagination \n                classes={classes}\n                btnSwitchPage={handlePaginationBtn} \n                countTodoOnPage={countTodoOnPage}                \n                countFilterTodo={todos.length}\n            />\n            }\n            <Snackbar \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={openBar} \n                autoHideDuration={6000} \n                onClose={handleClose}\n            >\n                <Alert onClose={handleClose} severity=\"error\">\n                    {trackBug}\n                </Alert>\n            </Snackbar>\n        </Box>\n    )\n}\n\nexport default TodoSection","import React from 'react'\nimport Section from './TodoSection'\nimport { Container } from '@material-ui/core';\n\nfunction TodoMain(props) {\n    return (\n        <Container maxWidth='md'>\n            <Section createBlock={props.createBlock}/>\n        </Container>\n\n    )\n}\n\nexport default TodoMain","import React from 'react'\nimport TodoMain from './TodoMain/TodoMain'\n\nexport default function App() {\n\n    function createBlock () {\n        return (\n            console.log(\"asdkfsa;ldfkn\")\n        )\n    }\n\n    return (\n        <TodoMain createBlock={createBlock}/>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}