{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maldren\\\\Desktop\\\\ToDo-API-Interaction-\\\\src\\\\TodoMain\\\\TodoSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Typography, Button, Box, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TodoTitle from './TodoTitle';\nimport TodoForm from './TodoForm';\nimport Options from './Options';\nimport TodoItem from './TodoItem';\nimport Pagination from './Pagination';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: 'white'\n  },\n  input: {\n    color: \"white\"\n  }\n}));\n\nfunction TodoSection() {\n  _s();\n\n  const classes = useStyles();\n  const [todos, setTodos] = useState([]);\n  const [filterTodos, setFilterTodos] = useState([...todos]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [flagHideBtn, setFlagHideBtn] = useState(false);\n  const [filterBy, setFilterBy] = useState('');\n  console.log(' ========= Render todoSection', todos);\n  const countTodoOnPage = 3;\n\n  function sliceTodosList() {\n    const lastIdTask = currentPage * countTodoOnPage;\n    const firstIdTask = lastIdTask - countTodoOnPage;\n    setFilterTodos(todos.slice(firstIdTask, lastIdTask));\n  } //REST API\n\n\n  const postRequest = async task => {\n    try {\n      const dataPOST = await axios.post('https://todo-api-learning.herokuapp.com/v1/task/2', task);\n      setTodos([...todos, dataPOST.data]);\n      sliceTodosList();\n      console.log('Very pretty code!!!');\n    } catch (err) {\n      console.log('It is wrong code!!!!!', err);\n    }\n  };\n\n  const getRequest = async () => {\n    console.log('it is realy filterBy in getrequest', currentPage);\n\n    try {\n      const dataGET = await axios.get('https://todo-api-learning.herokuapp.com/v1/tasks/2', {\n        params: {\n          filterBy\n        }\n      });\n      setTodos(dataGET.data);\n      console.log(dataGET.data.map(item => item.name));\n    } catch (err) {\n      console.log('GET function very bad written', err);\n    }\n  }; // const getRequest = useCallback(async () => {\n  //     console.log('it is realy filterBy in getrequest', currentPage)\n  //     try {\n  //         const dataGET = await axios.get('https://todo-api-learning.herokuapp.com/v1/tasks/2', {params: { filterBy }})\n  //         setTodos(dataGET.data)\n  //         console.log(dataGET.data.map(item => item.name))\n  //     } catch (err) {\n  //         console.log('GET function very bad written', err)\n  //     }\n  // }, [filterBy, filterTodos])\n\n\n  const deleteRequest = async id => {\n    try {\n      await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`);\n      setTodos([...todos.filter(todo => todo.uuid !== id)]);\n      setFilterTodos([...filterTodos.filter(todo => todo.uuid !== id)]);\n    } catch (err) {\n      console.log(`Troubles with delete task: ${err}`);\n    }\n  };\n\n  const putRequest = async (id, task) => {\n    try {\n      const dataPUT = await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`, {\n        done: !task.done\n      });\n      console.log('dataPUT', dataPUT.data);\n    } catch (err) {\n      console.log('PUT trouble: ', err);\n    }\n  };\n\n  function handleAddItem(userInput, funcDelete) {\n    const newItem = {\n      name: userInput,\n      done: false\n    };\n    postRequest(newItem);\n    console.log('Response!!! ', 'setTodos:', todos.length, 'filterTodos:', filterTodos.length);\n    funcDelete('');\n  } //Hook useEffect\n\n\n  useEffect(() => {\n    setFilterTodos(todos.slice(currentPage * 3 - 3, currentPage * 3));\n    console.log('it\"s working: ', todos.length);\n  }, [currentPage]);\n  useEffect(() => {\n    if (filterTodos.length < 1 && todos.length !== 0 && currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n      getRequest(todos);\n    } else if (filterTodos.length < 1 && todos.length !== 0 && currentPage === 1) {\n      setFilterTodos(todos.slice(currentPage * 3 - 3, currentPage * 3));\n    }\n  }, [filterTodos.length]); //Action definite Todo item    \n\n  function completeTodo(id, task) {\n    putRequest(id, task);\n    getRequest();\n  }\n\n  function handleDeleteToDo(itemId) {\n    deleteRequest(itemId);\n  } // Filtration\n\n\n  function handleFilter(paramFilter) {\n    setFilterBy(paramFilter);\n    getRequest();\n  }\n\n  console.log(filterBy);\n  const lastIdTask = currentPage * countTodoOnPage;\n  const firstIdTask = lastIdTask - countTodoOnPage;\n\n  function handleFilterAll() {\n    getRequest();\n  }\n\n  function handleFilterDone() {\n    setFilterTodos(todos.filter(todo => todo.done === true).slice(firstIdTask, lastIdTask));\n    handleHidePagi();\n  }\n\n  function handleFilterUndone() {\n    setFilterTodos(todos.filter(todo => todo.done === false).slice(firstIdTask, lastIdTask));\n    handleHidePagi();\n  } //Sort\n\n\n  function handleSortEarlier() {\n    setFilterTodos(filterTodos.sort(function (a, b) {\n      return b.id - a.id;\n    }));\n  }\n\n  function handleSortLater() {\n    setFilterTodos(filterTodos.sort(function (a, b) {\n      return a.id - b.id;\n    }));\n  } //Pagination \n  // Hide pagination on length array less 3\n\n\n  function handleHidePagi() {\n    if (filterTodos.length < 3) {\n      setFlagHideBtn(true);\n      console.log(filterTodos.length);\n    } else {\n      setFlagHideBtn(false);\n      console.log(filterTodos.length);\n    }\n  }\n\n  function handlePaginationBtn(num) {\n    setCurrentPage(num);\n    console.log('number of page: ', currentPage);\n  } // Actions on definite task\n\n\n  const [boolVal, setBoolVal] = useState(true);\n\n  function handleClickForm() {\n    setBoolVal(false);\n  }\n\n  function handleClickEsc(e, task, func) {\n    if (e.key === 'Escape') {\n      setFilterTodos([...filterTodos.map(todo => {\n        func(task.title); // task.title = old\n\n        return todo;\n      })]);\n      setBoolVal(true);\n    }\n  }\n\n  function handleClickEnter(event, newTitle, task) {\n    if (boolVal === false && event.key === 'Enter') {\n      setFilterTodos([...filterTodos.map(todo => {\n        task.title = newTitle;\n        return todo;\n      })]);\n      setBoolVal(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bgcolor: \"text.secondary\",\n    p: 10,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h3\",\n      children: \"toDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: handleAddItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      sortTodosLater: handleSortLater,\n      sortTodosEarlier: handleSortEarlier,\n      filterAll: handleFilterAll,\n      filterUndone: handleFilterUndone,\n      filterDone: handleFilterDone,\n      filterMethod: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: filterTodos.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          completeTodo: completeTodo,\n          style: {\n            width: '100%'\n          },\n          todoDelete: handleDeleteToDo,\n          todo: todo,\n          clickEnter: handleClickEnter,\n          clickForm: handleClickForm,\n          clickEsc: handleClickEsc,\n          boolVal: boolVal\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), todos.length > 3 && /*#__PURE__*/_jsxDEV(Pagination, {\n      classes: classes,\n      btnSwitchPage: handlePaginationBtn,\n      countTodoOnPage: countTodoOnPage,\n      countFilterTodo: todos.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this); // (\n  // <section className='main__menu'>\n  //     <TodoTitle />    \n  //     <TodoForm \n  //         addTodo={handleAddItem} \n  //         titleInput={titleInput} \n  //         handleChangeInput={handleChangeInput} \n  //         deleteInput={handleDeleteInput} \n  //     />\n  //     <Options sortTodosLater={handleSortLater} sortTodosEarlier={handleSortEarlier} filterAll={handleFilterAll} filterUndone={handleFilterUndone} filterDone={handleFilterDone}/>\n  //     <ul className=\"main__taskList\">\n  //         {filterTodos.map((todo, index) => {\n  //             return <TodoItem \n  //                 number={index}\n  //                 todoDelete={handleDeleteToDo}\n  //                 todo={todo} \n  //                 key={index}/>\n  //             })\n  //         }\n  //     </ul>\n  //     <Pagination btnSwitchPage={handlePaginationBtn} countTodos={todos.length} countTodoOnPage={countTodoOnPage}/>\n  // </section>\n  // )\n}\n\n_s(TodoSection, \"1n7sJ6y8bn7T35yq44pkBiyhBCo=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoSection;\nexport default TodoSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoSection\");","map":{"version":3,"sources":["C:/Users/Maldren/Desktop/ToDo-API-Interaction-/src/TodoMain/TodoSection.js"],"names":["React","useState","useEffect","useCallback","Typography","Button","Box","List","makeStyles","TodoTitle","TodoForm","Options","TodoItem","Pagination","axios","useStyles","title","color","input","TodoSection","classes","todos","setTodos","filterTodos","setFilterTodos","currentPage","setCurrentPage","flagHideBtn","setFlagHideBtn","filterBy","setFilterBy","console","log","countTodoOnPage","sliceTodosList","lastIdTask","firstIdTask","slice","postRequest","task","dataPOST","post","data","err","getRequest","dataGET","get","params","map","item","name","deleteRequest","id","delete","filter","todo","uuid","putRequest","dataPUT","patch","done","handleAddItem","userInput","funcDelete","newItem","length","completeTodo","handleDeleteToDo","itemId","handleFilter","paramFilter","handleFilterAll","handleFilterDone","handleHidePagi","handleFilterUndone","handleSortEarlier","sort","a","b","handleSortLater","handlePaginationBtn","num","boolVal","setBoolVal","handleClickForm","handleClickEsc","e","func","key","handleClickEnter","event","newTitle","index","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport { Typography, Button, Box, List } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport TodoTitle from './TodoTitle'\r\nimport TodoForm from './TodoForm'\r\nimport Options from './Options'\r\nimport TodoItem from './TodoItem'\r\nimport Pagination from './Pagination'\r\nimport axios from 'axios'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    title: {\r\n        color: 'white'\r\n    },\r\n    input: {\r\n        color: \"white\"\r\n      }\r\n}))\r\n\r\n\r\nfunction TodoSection() {\r\n\r\n\r\n    \r\n\r\n    const classes = useStyles();\r\n\r\n    const [todos, setTodos] = useState([])\r\n    const [filterTodos, setFilterTodos] = useState([...todos])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [flagHideBtn, setFlagHideBtn] = useState(false)\r\n    const [filterBy, setFilterBy] = useState('')\r\n    console.log(' ========= Render todoSection', todos)\r\n    const countTodoOnPage = 3    \r\n\r\n    function sliceTodosList() {\r\n        const lastIdTask = currentPage * countTodoOnPage\r\n        const firstIdTask = lastIdTask - countTodoOnPage\r\n        setFilterTodos(todos.slice(firstIdTask, lastIdTask))\r\n    }\r\n\r\n\r\n\r\n//REST API\r\n    const postRequest =  async (task) => {\r\n        try {\r\n            const dataPOST = await axios.post('https://todo-api-learning.herokuapp.com/v1/task/2', task)\r\n            setTodos([...todos, dataPOST.data])\r\n            sliceTodosList()\r\n            console.log('Very pretty code!!!')\r\n        } catch (err) {\r\n            console.log('It is wrong code!!!!!', err)\r\n        }\r\n    }\r\n\r\n\r\n    const getRequest = async () => {\r\n        console.log('it is realy filterBy in getrequest', currentPage)\r\n        try {\r\n            const dataGET = await axios.get('https://todo-api-learning.herokuapp.com/v1/tasks/2', {params: { filterBy }})\r\n            setTodos(dataGET.data)\r\n            console.log(dataGET.data.map(item => item.name))\r\n        } catch (err) {\r\n            console.log('GET function very bad written', err)\r\n        }\r\n    }\r\n    // const getRequest = useCallback(async () => {\r\n    //     console.log('it is realy filterBy in getrequest', currentPage)\r\n    //     try {\r\n    //         const dataGET = await axios.get('https://todo-api-learning.herokuapp.com/v1/tasks/2', {params: { filterBy }})\r\n    //         setTodos(dataGET.data)\r\n    //         console.log(dataGET.data.map(item => item.name))\r\n    //     } catch (err) {\r\n    //         console.log('GET function very bad written', err)\r\n    //     }\r\n    // }, [filterBy, filterTodos])\r\n\r\n\r\n    const deleteRequest = async (id) => {\r\n        try {\r\n            await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`)\r\n            setTodos([...todos.filter(todo => todo.uuid !== id) ])\r\n            setFilterTodos([...filterTodos.filter(todo => todo.uuid !== id) ])\r\n        } catch (err) {\r\n             console.log(`Troubles with delete task: ${err}`)\r\n        }\r\n    }\r\n    const putRequest = async (id, task) => {\r\n        try {\r\n            const dataPUT = await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/2/${id}`, {done: !task.done})\r\n            console.log('dataPUT', dataPUT.data)\r\n        } catch (err) {\r\n            console.log('PUT trouble: ', err)\r\n        }\r\n    }\r\n\r\n\r\n    function handleAddItem (userInput, funcDelete) {\r\n        const newItem = {\r\n            name: userInput,\r\n            done: false,\r\n        }\r\n        postRequest (newItem)\r\n        console.log('Response!!! ', 'setTodos:', todos.length, 'filterTodos:', filterTodos.length)\r\n        funcDelete('')\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n//Hook useEffect\r\n    useEffect(() => {\r\n        setFilterTodos(todos.slice(currentPage * 3 - 3, currentPage * 3))\r\n        console.log('it\"s working: ', todos.length)\r\n    }, [currentPage])\r\n\r\n    useEffect (() => {\r\n        if (filterTodos.length < 1 && todos.length !== 0 && currentPage !== 1) {\r\n            setCurrentPage(currentPage - 1)\r\n            getRequest(todos)\r\n        } \r\n        else if (filterTodos.length < 1 && todos.length !== 0 && currentPage === 1) {\r\n            setFilterTodos(todos.slice(currentPage * 3 - 3, currentPage * 3))\r\n        }\r\n    }, [filterTodos.length])\r\n\r\n\r\n\r\n\r\n\r\n//Action definite Todo item    \r\n    function completeTodo (id, task) {\r\n        putRequest(id, task)\r\n        getRequest()\r\n    }\r\n\r\n    function handleDeleteToDo (itemId) {\r\n        deleteRequest(itemId)\r\n    }\r\n    \r\n\r\n\r\n\r\n// Filtration\r\n    function handleFilter (paramFilter) {\r\n        setFilterBy(paramFilter)\r\n        getRequest()\r\n    }\r\n    console.log(filterBy)\r\n\r\n    \r\n    const lastIdTask = currentPage * countTodoOnPage\r\n    const firstIdTask = lastIdTask - countTodoOnPage\r\n\r\n    function handleFilterAll () {\r\n        getRequest()\r\n    }\r\n\r\n    function handleFilterDone () {\r\n        setFilterTodos(todos.filter(todo => todo.done === true).slice(firstIdTask, lastIdTask))\r\n        handleHidePagi()\r\n    }\r\n\r\n    function handleFilterUndone () {\r\n        setFilterTodos(todos.filter(todo => todo.done === false).slice(firstIdTask, lastIdTask))\r\n        handleHidePagi()\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n//Sort\r\n    function handleSortEarlier () {\r\n        setFilterTodos(filterTodos.sort(function(a, b) {\r\n            return b.id - a.id\r\n        }))\r\n    }\r\n\r\n    function handleSortLater () {\r\n        setFilterTodos(filterTodos.sort(function(a, b) {\r\n            return a.id - b.id \r\n        }))\r\n    }\r\n\r\n\r\n\r\n\r\n//Pagination \r\n   // Hide pagination on length array less 3\r\n   function handleHidePagi () {\r\n        if(filterTodos.length < 3) {\r\n            setFlagHideBtn(true)\r\n            console.log(filterTodos.length)\r\n        } \r\n        else {\r\n            setFlagHideBtn(false)\r\n            console.log(filterTodos.length)\r\n\r\n        }\r\n    }\r\n\r\n    function handlePaginationBtn (num) {\r\n        setCurrentPage(num)\r\n        console.log('number of page: ', currentPage)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n// Actions on definite task\r\n\r\nconst [boolVal, setBoolVal] = useState(true)\r\n\r\nfunction handleClickForm () {\r\n    setBoolVal(false)\r\n}\r\n\r\nfunction handleClickEsc (e, task, func) {\r\n    if (e.key === 'Escape') {\r\n        setFilterTodos([...filterTodos.map(todo => {\r\n            func(task.title)\r\n            // task.title = old\r\n            return todo\r\n        })])\r\n        setBoolVal(true)\r\n    }\r\n}\r\n\r\nfunction handleClickEnter (event, newTitle, task) {\r\n    if(boolVal === false && event.key === 'Enter') {\r\n        setFilterTodos([...filterTodos.map(todo => {\r\n            task.title = newTitle\r\n            return todo\r\n        })])\r\n        setBoolVal(true)\r\n        \r\n    }\r\n}\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <Box bgcolor=\"text.secondary\" p={10}>\r\n            <Typography className={ classes.title } variant='h3'>toDo List</Typography>\r\n            <TodoForm addTodo={handleAddItem}></TodoForm>\r\n            <Options \r\n                sortTodosLater={handleSortLater} \r\n                sortTodosEarlier={handleSortEarlier} \r\n                filterAll={handleFilterAll} \r\n                filterUndone={handleFilterUndone} \r\n                filterDone={handleFilterDone}\r\n                filterMethod = {handleFilter}\r\n            />\r\n            <List>\r\n                {filterTodos.map((todo,index) => {\r\n                    return <TodoItem \r\n                                key={index}\r\n                                completeTodo={completeTodo}\r\n                                style={{width: '100%'}}\r\n                                todoDelete={handleDeleteToDo}\r\n                                todo={todo} \r\n                                clickEnter={handleClickEnter}\r\n                                clickForm={handleClickForm}\r\n                                clickEsc={handleClickEsc}\r\n                                boolVal={boolVal}\r\n                            />\r\n                    })\r\n                }\r\n            </List>\r\n            {todos.length > 3 \r\n            && \r\n            <Pagination \r\n                classes={classes}\r\n                btnSwitchPage={handlePaginationBtn} \r\n                countTodoOnPage={countTodoOnPage}                \r\n                countFilterTodo={todos.length}\r\n            />\r\n            }\r\n        </Box>\r\n    )\r\n    // (\r\n        // <section className='main__menu'>\r\n        //     <TodoTitle />    \r\n        //     <TodoForm \r\n        //         addTodo={handleAddItem} \r\n        //         titleInput={titleInput} \r\n        //         handleChangeInput={handleChangeInput} \r\n        //         deleteInput={handleDeleteInput} \r\n        //     />\r\n        //     <Options sortTodosLater={handleSortLater} sortTodosEarlier={handleSortEarlier} filterAll={handleFilterAll} filterUndone={handleFilterUndone} filterDone={handleFilterDone}/>\r\n        //     <ul className=\"main__taskList\">\r\n        //         {filterTodos.map((todo, index) => {\r\n        //             return <TodoItem \r\n        //                 number={index}\r\n        //                 todoDelete={handleDeleteToDo}\r\n        //                 todo={todo} \r\n        //                 key={index}/>\r\n        //             })\r\n        //         }\r\n        //     </ul>\r\n        //     <Pagination btnSwitchPage={handlePaginationBtn} countTodos={todos.length} countTodoOnPage={countTodoOnPage}/>\r\n        // </section>\r\n    // )\r\n}\r\n\r\nexport default TodoSection"]},"metadata":{},"sourceType":"module"}