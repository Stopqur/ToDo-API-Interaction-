{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maldren\\\\Desktop\\\\ToDo-API-Interaction-\\\\src\\\\TodoMain\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ListItem, InputLabel, Checkbox, Button, Box, Typography, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: 'white'\n  },\n  dateText: {\n    color: 'orange'\n  },\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function TodoItem({\n  todo,\n  todoDelete,\n  completeTodo,\n  clickEnter,\n  clickForm,\n  clickEsc,\n  boolVal\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [classItem, setClassItem] = useState('taskItem__text');\n  const [changeTitle, setChangeTitle] = useState(todo.title);\n\n  function changeText(task, e) {\n    setChangeTitle(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: todo.id,\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        id: todo.id.toString(),\n        value: \"checkedA\",\n        inputProps: {\n          'aria-label': 'Checkbox A'\n        },\n        onChange: () => completeTodo(todo.id),\n        checked: todo.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        onDoubleClick: () => clickForm(),\n        onKeyDown: e => clickEsc(e, todo, setChangeTitle),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          width: \"608px\",\n          p: 2,\n          children: boolVal ? /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            children: changeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.input,\n            onKeyPress: e => clickEnter(e, changeTitle, todo, setChangeTitle),\n            onChange: e => changeText(todo, e),\n            value: changeTitle,\n            id: \"outlined-basic\",\n            label: \"Outlined\",\n            variant: \"outlined\",\n            InputProps: {\n              style: {\n                color: \"#f50057\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.dateText,\n        children: todo.date.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 32\n      }, this),\n      onClick: () => todoDelete(todo.id),\n      type: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoItem, \"7VIzY6iMeUGI3R73SOFafA09zHw=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/Maldren/Desktop/ToDo-API-Interaction-/src/TodoMain/TodoItem.js"],"names":["React","useState","ListItem","InputLabel","Checkbox","Button","Box","Typography","TextField","makeStyles","DeleteOutlinedIcon","useStyles","theme","title","color","dateText","root","margin","spacing","width","TodoItem","todo","todoDelete","completeTodo","clickEnter","clickForm","clickEsc","boolVal","classes","classItem","setClassItem","changeTitle","setChangeTitle","changeText","task","e","target","value","id","display","toString","completed","input","style","date","toLocaleString"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { ListItem, InputLabel, Checkbox, Button, Box, Typography, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: 'white'\r\n    },\r\n    dateText: {\r\n        color: 'orange'\r\n    },\r\n    root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n          width: '25ch',\r\n        },\r\n      }\r\n}))\r\n\r\n\r\nexport default function TodoItem({todo, todoDelete, completeTodo, clickEnter, clickForm, clickEsc, boolVal }) {\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [classItem, setClassItem] = useState('taskItem__text')\r\n    \r\n    const [changeTitle, setChangeTitle] = useState(todo.title)\r\n\r\n    function changeText (task, e ) {\r\n        setChangeTitle(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <ListItem>\r\n            <InputLabel htmlFor={todo.id} style={{display: 'flex'}}>\r\n                <Checkbox\r\n                    id={todo.id.toString()} \r\n                    value=\"checkedA\"\r\n                    inputProps={{ 'aria-label': 'Checkbox A' }}\r\n                    onChange={() => completeTodo(todo.id)}\r\n                    checked={todo.completed}\r\n                />\r\n                {/* <Input\r\n                    id={todo.id.toString()} \r\n                    type=\"checkbox\" \r\n                    onChange={() => completeTodo(todo.id)}\r\n                    checked={todo.completed}\r\n                >\r\n                </Input> */}\r\n                <form \r\n                    className={classes.root}\r\n                    onDoubleClick={() => clickForm()}\r\n                    onKeyDown={(e) => clickEsc(e, todo, setChangeTitle)}\r\n                >\r\n                    <Box width='608px' p={2} >\r\n                        { (boolVal) \r\n                        ? <Typography className={classes.title} >{changeTitle}</Typography>\r\n                        : <TextField \r\n                            className={classes.input}\r\n                            onKeyPress={(e) => clickEnter(e, changeTitle, todo, setChangeTitle)} \r\n                            onChange={(e) => changeText(todo, e)} \r\n                            value={changeTitle} \r\n                            id=\"outlined-basic\" \r\n                            label=\"Outlined\" \r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                style: {\r\n                                    color: \"#f50057\"\r\n                                }\r\n                            }}\r\n                          />\r\n                        }\r\n                    </Box>\r\n                </form>\r\n                <Typography className={classes.dateText}>{todo.date.toLocaleString()}</Typography>\r\n            </InputLabel>\r\n            <Button startIcon={<DeleteOutlinedIcon />} onClick={() => todoDelete(todo.id)} type=\"button\"></Button>\r\n        </ListItem>\r\n    )\r\n}   \r\n\r\n"]},"metadata":{},"sourceType":"module"}