{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maldren\\\\Desktop\\\\ToDo-API-Interaction-\\\\src\\\\TodoMain\\\\TodoSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Button, Box, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TodoTitle from './TodoTitle';\nimport TodoForm from './TodoForm';\nimport Options from './Options';\nimport TodoItem from './TodoItem';\nimport Pagination from './Pagination'; //any changes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  title: {\n    color: 'white'\n  },\n  input: {\n    color: \"white\"\n  }\n}));\n\nfunction TodoSection() {\n  _s();\n\n  const classes = useStyles();\n  const [todos, setTodos] = useState([]);\n  const [filterTodos, setFilterTodos] = useState([...todos]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [flagHideBtn, setFlagHideBtn] = useState(false);\n  console.log(' ========= Render todoSection', todos);\n  const countTodoOnPage = 3;\n\n  function sliceTodosList(arrTodo) {\n    const lastIdTask = currentPage * countTodoOnPage;\n    const firstIdTask = lastIdTask - countTodoOnPage;\n    setFilterTodos(arrTodo.slice(firstIdTask, lastIdTask));\n  }\n\n  function handleAddItem(userInput, funcDelete) {\n    const newItem = {\n      id: Date.now(),\n      title: userInput,\n      completed: false,\n      date: new Date()\n    };\n    funcDelete('');\n    setTodos([...todos, newItem]);\n    setFilterTodos([...todos, newItem]);\n\n    if (filterTodos.length > 2) {\n      sliceTodosList(todos);\n    }\n  } //Hook useEffect\n\n\n  useEffect(() => {\n    sliceTodosList(todos);\n    console.log('it\"s working');\n  }, [currentPage]);\n  useEffect(() => {\n    if (filterTodos.length < 1 && todos.length !== 0 && currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n      sliceTodosList(todos);\n    } else if (filterTodos.length < 1 && todos.length !== 0 && currentPage === 1) {\n      sliceTodosList(todos);\n    }\n  }, [filterTodos.length]); //Action definite Todo item    \n\n  function completeTodo(id) {\n    setFilterTodos([...filterTodos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n        return todo;\n      }\n\n      return todo;\n    })]);\n  }\n\n  function handleDeleteToDo(itemId) {\n    setFilterTodos([...filterTodos.filter(todo => todo.id !== itemId)]);\n    setTodos([...todos.filter(todo => todo.id !== itemId)]);\n  } // Filtration\n\n\n  const lastIdTask = currentPage * countTodoOnPage;\n  const firstIdTask = lastIdTask - countTodoOnPage;\n\n  function handleFilterAll() {\n    setFlagHideBtn(false);\n    sliceTodosList(todos);\n    console.log(filterTodos.length);\n  }\n\n  function handleFilterDone() {\n    setFilterTodos(todos.filter(todo => todo.completed === true).slice(firstIdTask, lastIdTask));\n    handleHidePagi();\n  }\n\n  function handleFilterUndone() {\n    setFilterTodos(todos.filter(todo => todo.completed === false).slice(firstIdTask, lastIdTask));\n    handleHidePagi();\n  } //Sort\n\n\n  function handleSortEarlier() {\n    setFilterTodos(filterTodos.sort(function (a, b) {\n      return b.id - a.id;\n    }));\n  }\n\n  function handleSortLater() {\n    setFilterTodos(filterTodos.sort(function (a, b) {\n      return a.id - b.id;\n    }));\n  } //Pagination \n  // Hide pagination on length array less 3\n\n\n  function handleHidePagi() {\n    if (filterTodos.length < 3) {\n      setFlagHideBtn(true);\n      console.log(filterTodos.length);\n    } else {\n      setFlagHideBtn(false);\n      console.log(filterTodos.length);\n    }\n  }\n\n  function handlePaginationBtn(num) {\n    setCurrentPage(num);\n    console.log('number of page: ', currentPage);\n  } // Actions on definite task\n\n\n  const [boolVal, setBoolVal] = useState(true);\n\n  function handleClickForm() {\n    setBoolVal(false);\n  }\n\n  function handleClickEsc(e, task, func) {\n    if (e.key === 'Escape') {\n      setFilterTodos([...filterTodos.map(todo => {\n        func(task.title); // task.title = old\n\n        return todo;\n      })]);\n      setBoolVal(true);\n    }\n  }\n\n  function handleClickEnter(event, newTitle, task) {\n    if (boolVal === false && event.key === 'Enter') {\n      setFilterTodos([...filterTodos.map(todo => {\n        task.title = newTitle;\n        return todo;\n      })]);\n      setBoolVal(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bgcolor: \"text.secondary\",\n    p: 10,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h3\",\n      children: \"toDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: handleAddItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      sortTodosLater: handleSortLater,\n      sortTodosEarlier: handleSortEarlier,\n      filterAll: handleFilterAll,\n      filterUndone: handleFilterUndone,\n      filterDone: handleFilterDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: filterTodos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          completeTodo: completeTodo,\n          style: {\n            width: '100%'\n          },\n          todoDelete: handleDeleteToDo,\n          classItem: todo.class,\n          todo: todo,\n          clickEnter: handleClickEnter,\n          clickForm: handleClickForm,\n          clickEsc: handleClickEsc,\n          boolVal: boolVal\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), todos.length > 3 && /*#__PURE__*/_jsxDEV(Pagination, {\n      classes: classes,\n      btnSwitchPage: handlePaginationBtn,\n      countTodoOnPage: countTodoOnPage,\n      countFilterTodo: todos.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this); // (\n  // <section className='main__menu'>\n  //     <TodoTitle />    \n  //     <TodoForm \n  //         addTodo={handleAddItem} \n  //         titleInput={titleInput} \n  //         handleChangeInput={handleChangeInput} \n  //         deleteInput={handleDeleteInput} \n  //     />\n  //     <Options sortTodosLater={handleSortLater} sortTodosEarlier={handleSortEarlier} filterAll={handleFilterAll} filterUndone={handleFilterUndone} filterDone={handleFilterDone}/>\n  //     <ul className=\"main__taskList\">\n  //         {filterTodos.map((todo, index) => {\n  //             return <TodoItem \n  //                 number={index}\n  //                 todoDelete={handleDeleteToDo}\n  //                 todo={todo} \n  //                 key={index}/>\n  //             })\n  //         }\n  //     </ul>\n  //     <Pagination btnSwitchPage={handlePaginationBtn} countTodos={todos.length} countTodoOnPage={countTodoOnPage}/>\n  // </section>\n  // )\n}\n\n_s(TodoSection, \"VU8yXCdvUD7XeeRJBvWk6ms+HNM=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoSection;\nexport default TodoSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoSection\");","map":{"version":3,"sources":["C:/Users/Maldren/Desktop/ToDo-API-Interaction-/src/TodoMain/TodoSection.js"],"names":["React","useState","useEffect","Typography","Button","Box","List","makeStyles","TodoTitle","TodoForm","Options","TodoItem","Pagination","useStyles","title","color","input","TodoSection","classes","todos","setTodos","filterTodos","setFilterTodos","currentPage","setCurrentPage","flagHideBtn","setFlagHideBtn","console","log","countTodoOnPage","sliceTodosList","arrTodo","lastIdTask","firstIdTask","slice","handleAddItem","userInput","funcDelete","newItem","id","Date","now","completed","date","length","completeTodo","map","todo","handleDeleteToDo","itemId","filter","handleFilterAll","handleFilterDone","handleHidePagi","handleFilterUndone","handleSortEarlier","sort","a","b","handleSortLater","handlePaginationBtn","num","boolVal","setBoolVal","handleClickForm","handleClickEsc","e","task","func","key","handleClickEnter","event","newTitle","width","class"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Typography, Button, Box, List } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport TodoTitle from './TodoTitle'\r\nimport TodoForm from './TodoForm'\r\nimport Options from './Options'\r\nimport TodoItem from './TodoItem'\r\nimport Pagination from './Pagination'\r\n//any changes\r\nconst useStyles = makeStyles(() => ({\r\n    title: {\r\n        color: 'white'\r\n    },\r\n    input: {\r\n        color: \"white\"\r\n      }\r\n}))\r\n\r\n\r\nfunction TodoSection() {\r\n    const classes = useStyles();\r\n\r\n    const [todos, setTodos] = useState([])\r\n    const [filterTodos, setFilterTodos] = useState([...todos])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [flagHideBtn, setFlagHideBtn] = useState(false)\r\n    console.log(' ========= Render todoSection', todos)\r\n    const countTodoOnPage = 3    \r\n\r\n    function sliceTodosList(arrTodo) {\r\n        const lastIdTask = currentPage * countTodoOnPage\r\n        const firstIdTask = lastIdTask - countTodoOnPage\r\n        setFilterTodos(arrTodo.slice(firstIdTask, lastIdTask))\r\n    }\r\n\r\n\r\n    function handleAddItem (userInput, funcDelete) {\r\n        const newItem = {\r\n            id: Date.now(),\r\n            title: userInput,\r\n            completed: false,\r\n            date: new Date()\r\n        }\r\n        funcDelete('')\r\n        setTodos([...todos, newItem])\r\n        setFilterTodos([...todos, newItem])\r\n        if (filterTodos.length > 2) {\r\n            sliceTodosList(todos)\r\n        }\r\n    }\r\n\r\n\r\n\r\n//Hook useEffect\r\n    useEffect(() => {\r\n        sliceTodosList(todos)\r\n        console.log('it\"s working')\r\n    }, [currentPage])\r\n\r\n    useEffect (() => {\r\n        if (filterTodos.length < 1 && todos.length !== 0 && currentPage !== 1) {\r\n            setCurrentPage(currentPage - 1)\r\n            sliceTodosList(todos)\r\n        } \r\n        else if (filterTodos.length < 1 && todos.length !== 0 && currentPage === 1) {\r\n            sliceTodosList(todos)\r\n        }\r\n    }, [filterTodos.length])\r\n\r\n\r\n\r\n\r\n\r\n//Action definite Todo item    \r\n    function completeTodo (id) {\r\n        setFilterTodos([...filterTodos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.completed = !todo.completed\r\n                return todo\r\n            } return todo\r\n        })])\r\n    }\r\n\r\n    function handleDeleteToDo (itemId) {\r\n        setFilterTodos([...filterTodos.filter(todo => todo.id !== itemId) ])\r\n        setTodos([...todos.filter(todo => todo.id !== itemId) ])\r\n    }\r\n    \r\n\r\n\r\n\r\n// Filtration\r\n    const lastIdTask = currentPage * countTodoOnPage\r\n    const firstIdTask = lastIdTask - countTodoOnPage\r\n\r\n    function handleFilterAll () {\r\n        setFlagHideBtn(false)\r\n        sliceTodosList(todos)\r\n        console.log(filterTodos.length)\r\n    }\r\n\r\n    function handleFilterDone () {\r\n        setFilterTodos(todos.filter(todo => todo.completed === true).slice(firstIdTask, lastIdTask))\r\n        handleHidePagi()\r\n    }\r\n\r\n    function handleFilterUndone () {\r\n        setFilterTodos(todos.filter(todo => todo.completed === false).slice(firstIdTask, lastIdTask))\r\n        handleHidePagi()\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n//Sort\r\n    function handleSortEarlier () {\r\n        setFilterTodos(filterTodos.sort(function(a, b) {\r\n            return b.id - a.id\r\n        }))\r\n    }\r\n\r\n    function handleSortLater () {\r\n        setFilterTodos(filterTodos.sort(function(a, b) {\r\n            return a.id - b.id \r\n        }))\r\n    }\r\n\r\n\r\n\r\n\r\n//Pagination \r\n   // Hide pagination on length array less 3\r\n   function handleHidePagi () {\r\n        if(filterTodos.length < 3) {\r\n            setFlagHideBtn(true)\r\n            console.log(filterTodos.length)\r\n        } \r\n        else {\r\n            setFlagHideBtn(false)\r\n            console.log(filterTodos.length)\r\n\r\n        }\r\n    }\r\n\r\n    function handlePaginationBtn (num) {\r\n        setCurrentPage(num)\r\n        console.log('number of page: ', currentPage)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n// Actions on definite task\r\n\r\nconst [boolVal, setBoolVal] = useState(true)\r\n\r\nfunction handleClickForm () {\r\n    setBoolVal(false)\r\n}\r\n\r\nfunction handleClickEsc (e, task, func) {\r\n    if (e.key === 'Escape') {\r\n        setFilterTodos([...filterTodos.map(todo => {\r\n            func(task.title)\r\n            // task.title = old\r\n            return todo\r\n        })])\r\n        setBoolVal(true)\r\n    }\r\n}\r\n\r\nfunction handleClickEnter (event, newTitle, task) {\r\n    if(boolVal === false && event.key === 'Enter') {\r\n        setFilterTodos([...filterTodos.map(todo => {\r\n            task.title = newTitle\r\n            return todo\r\n        })])\r\n        setBoolVal(true)\r\n        \r\n    }\r\n}\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <Box bgcolor=\"text.secondary\" p={10}>\r\n            <Typography className={ classes.title } variant='h3'>toDo List</Typography>\r\n            <TodoForm addTodo={handleAddItem}></TodoForm>\r\n            <Options \r\n                sortTodosLater={handleSortLater} \r\n                sortTodosEarlier={handleSortEarlier} \r\n                filterAll={handleFilterAll} \r\n                filterUndone={handleFilterUndone} \r\n                filterDone={handleFilterDone}\r\n            />\r\n            <List>\r\n                {filterTodos.map((todo) => {\r\n                    return <TodoItem \r\n                                completeTodo={completeTodo}\r\n                                style={{width: '100%'}}\r\n                                todoDelete={handleDeleteToDo}\r\n                                classItem={todo.class}\r\n                                todo={todo} \r\n                                key={todo.id}\r\n                                clickEnter={handleClickEnter}\r\n                                clickForm={handleClickForm}\r\n                                clickEsc={handleClickEsc}\r\n                                boolVal={boolVal}\r\n                            />\r\n                    })\r\n                }\r\n            </List>\r\n            {todos.length > 3 \r\n            && \r\n            <Pagination \r\n                classes={classes}\r\n                btnSwitchPage={handlePaginationBtn} \r\n                countTodoOnPage={countTodoOnPage}                \r\n                countFilterTodo={todos.length}\r\n            />\r\n            }\r\n        </Box>\r\n    )\r\n    // (\r\n        // <section className='main__menu'>\r\n        //     <TodoTitle />    \r\n        //     <TodoForm \r\n        //         addTodo={handleAddItem} \r\n        //         titleInput={titleInput} \r\n        //         handleChangeInput={handleChangeInput} \r\n        //         deleteInput={handleDeleteInput} \r\n        //     />\r\n        //     <Options sortTodosLater={handleSortLater} sortTodosEarlier={handleSortEarlier} filterAll={handleFilterAll} filterUndone={handleFilterUndone} filterDone={handleFilterDone}/>\r\n        //     <ul className=\"main__taskList\">\r\n        //         {filterTodos.map((todo, index) => {\r\n        //             return <TodoItem \r\n        //                 number={index}\r\n        //                 todoDelete={handleDeleteToDo}\r\n        //                 todo={todo} \r\n        //                 key={index}/>\r\n        //             })\r\n        //         }\r\n        //     </ul>\r\n        //     <Pagination btnSwitchPage={handlePaginationBtn} countTodos={todos.length} countTodoOnPage={countTodoOnPage}/>\r\n        // </section>\r\n    // )\r\n}\r\n\r\nexport default TodoSection"]},"metadata":{},"sourceType":"module"}