{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maldren\\\\Desktop\\\\ToDo-API-Interaction-\\\\src\\\\TodoMain\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ListItem, InputLabel, Checkbox, Button, Box, Typography, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: 'white'\n  },\n  dateText: {\n    color: 'orange'\n  },\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function TodoItem({\n  todo,\n  todoDelete,\n  completeTodo,\n  clickEnter,\n  clickForm,\n  clickEsc,\n  boolVal,\n  textTask\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [classItem, setClassItem] = useState('taskItem__text');\n  const [changeTitle, setChangeTitle] = useState(todo.name);\n\n  function changeText(task, e) {\n    setChangeTitle(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: todo.uuid,\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        value: \"checkedA\",\n        inputProps: {\n          'aria-label': 'Checkbox A'\n        },\n        onChange: () => completeTodo(todo.uuid, todo),\n        checked: todo.done\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        onDoubleClick: () => clickForm(),\n        onKeyDown: e => clickEsc(e, todo, setChangeTitle),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          width: \"608px\",\n          p: 2,\n          children: boolVal ? /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            children: `${changeTitle}, ${todo.done}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.input,\n            onKeyPress: e => clickEnter(e, changeTitle, todo, setChangeTitle),\n            onChange: e => changeText(todo, e),\n            value: changeTitle,\n            id: \"outlined-basic\",\n            label: \"Outlined\",\n            variant: \"outlined\",\n            InputProps: {\n              style: {\n                color: \"#f50057\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.dateText,\n        children: `${todo.createdAt.slice(0, 10)}, time: ${todo.createdAt.slice(12, 19)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 32\n      }, this),\n      onClick: () => todoDelete(todo.uuid),\n      type: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoItem, \"C+zUTnfX/edNMKmbQxK28eDSdes=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/Maldren/Desktop/ToDo-API-Interaction-/src/TodoMain/TodoItem.js"],"names":["React","useState","useEffect","ListItem","InputLabel","Checkbox","Button","Box","Typography","TextField","makeStyles","DeleteOutlinedIcon","axios","useStyles","theme","title","color","dateText","root","margin","spacing","width","TodoItem","todo","todoDelete","completeTodo","clickEnter","clickForm","clickEsc","boolVal","textTask","classes","classItem","setClassItem","changeTitle","setChangeTitle","name","changeText","task","e","target","value","uuid","display","alignItems","done","input","style","createdAt","slice"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { ListItem, InputLabel, Checkbox, Button, Box, Typography, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: 'white'\r\n    },\r\n    dateText: {\r\n        color: 'orange'\r\n    },\r\n    root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n          width: '25ch',\r\n        },\r\n      }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\nexport default function TodoItem({todo, todoDelete, completeTodo, clickEnter, clickForm, clickEsc, boolVal, textTask }) {\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [classItem, setClassItem] = useState('taskItem__text')\r\n    \r\n    const [changeTitle, setChangeTitle] = useState(todo.name)\r\n\r\n\r\n    function changeText (task, e ) {\r\n        setChangeTitle(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <ListItem >\r\n            <InputLabel htmlFor={todo.uuid} style={{display: 'flex', alignItems: 'center'}}>\r\n                <Checkbox\r\n                    value=\"checkedA\"\r\n                    inputProps={{ 'aria-label': 'Checkbox A' }}\r\n                    onChange={() => completeTodo(todo.uuid, todo)}\r\n                    checked={todo.done}\r\n                />\r\n                <form \r\n                    className={classes.root}\r\n                    onDoubleClick={() => clickForm()}\r\n                    onKeyDown={(e) => clickEsc(e, todo, setChangeTitle)}\r\n                >\r\n                    <Box width='608px' p={2} >\r\n                        { (boolVal) \r\n                        ? <Typography className={classes.title} >{`${changeTitle}, ${todo.done}`}</Typography>\r\n                        : <TextField \r\n                            className={classes.input}\r\n                            onKeyPress={(e) => clickEnter(e, changeTitle, todo, setChangeTitle)} \r\n                            onChange={(e) => changeText(todo, e)} \r\n                            value={changeTitle} \r\n                            id=\"outlined-basic\" \r\n                            label=\"Outlined\" \r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                style: {\r\n                                    color: \"#f50057\"\r\n                                }\r\n                            }}\r\n                          />\r\n                        }\r\n                    </Box>\r\n                </form>\r\n                                                        {/* {todo.createdAt.slice(0, 10) + ', time: ' + todo.createdAt.slice(12, 19)} */}\r\n                <Typography className={classes.dateText}>{`${todo.createdAt.slice(0, 10)}, time: ${todo.createdAt.slice(12, 19)}`}</Typography>\r\n            </InputLabel>\r\n            <Button startIcon={<DeleteOutlinedIcon />} onClick={() => todoDelete(todo.uuid)} type=\"button\"></Button>\r\n        </ListItem>\r\n    )\r\n}   \r\n\r\n"]},"metadata":{},"sourceType":"module"}